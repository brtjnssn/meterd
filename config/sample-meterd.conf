# Smart Meter Monitoring Daemon (meterd)
# Sample configuration file
#
# This sample shows a typical setup for meterd; for more
# information, please refer to the documentation.

# Configuration for logging
logging:
{
	# Set the loglevel
	loglevel = 3; 	# 0 = no logging, 1 = error, 
			# 2 = warning, 3 = info, 4 = debug

	# Where to log to; the settings below reflect default behaviour
	stdout = false; # do not log to stdout
	syslog = true; 	# log to syslog

	# Optionally, log to a file
	# filelog = "/var/log/meterd.log";
};

# Configure the behaviour of the daemon on startup
daemon:
{
	# Specify the PID file (optional, can also be specified on the
	# command line with the -p flag)
	#
	# pidfile = "/var/run/my-eemo.pid";

	# Prevent the daemon from forking (optional, can also be specified
	# on the command line with the -f flag)
	#
	# fork = false;
};

# Smart meter configuration
meter:
{
	# Specify the serial port to which the smart meter is connected;
	# this is typically a USB to serial device:
	port = "/dev/ttyUSB0";

	# Specify the baud rate at which the meter outputs data
	speed = 9600;

	# Specify the number of data bits in the serial transmission;
	# valid values are 7 or 8
	bits = 7;

	# Specify the parity; valid values are "none", "odd" and "even"
	parity = "none";

	# Specify whether or not to use hardware flow control on the
	# serial line
	rts_cts = false;

	# Specify whether or not to use software flow control on the
	# serial line
	xon_xoff = false;

	# Specify the interval (in seconds) at which the smart meter outputs 
        # fresh readings; if the meter meets the DSMR criteria this is usually
	# 10 seconds.
	meter_interval = 10;
};

# Database configuration
database:
{
	# Specify the database file in which the raw measurements of actual
	# consumption are stored. If you do not specify a file, storage of
	# this data will be disabled.
	raw_db = "/var/lib/meterd/raw.db";

	# Specify the database in which 5 minute average values of the
	# measured actual consumption is stored. If no file is specified
	# this data will be discarded.
	5min_avg = "/var/lib/meterd/5min.db";

	# Specify the database in which hourly average values of the
	# measured actual consumption is stored. If no file is specified
	# this data will be discarded.
	hourly_avg = "/var/lib/meterd/hourly.db";

	# Specify the identifier for current consumption (the value below
	# is the default value specified in the DSMR specification)
	current_consumption_id = "1.7.0";

	# Specify the identifier for current production (the value below
	# is the default value specified in the DSMR specification)
	current_production_id = "2.7.0";

	# Specify the database in which total consumption data will
	# be stored. If no file is specified this data will be discarded.
	total_consumed = "/var/lib/meterd/consumed.db";

	# Specify the interval with which to log total consumption;
	# five minutes (example below) is a sensible interval that will
	# not generate huge amounts of data that will make disk space
	# run out quickly.
	total_interval = 300;

	# Specify which consumption counters to record; the example below
	# is for a meter that measures 2 tariffs (high/low). As the example
	# shows, you can specify more than one counter.
	consumption:
	{
		counter:
		{
			# A short string to describe the counter; this 
			# information is used by the output and plotting
			# tools included in the distribution
			description = "Low In";

			# The identifier of the counter; consumption counters
			# are normally identified as 1.8.x (where x = [1..8])
			# according to the DSMR specification.
			id = "1.8.1";
		};

		counter:
		{
			description = "High In";

			id = "1.8.2";
		};
	};

	# Specify which production counters to record; the example below
	# is for a meter that measures 2 tariffs (high/low). As the example
	# shows, you can specify more than one counter.
	production:
	{
		counter:
		{
			# A short string to describe the counter; this 
			# information is used by the output and plotting
			# tools included in the distribution
			description = "Low Out";

			# The identifier of the counter; production counters
			# are normally identified as 2.8.x (where x = [1..8])
			# according to the DSMR specification.
			id = "2.8.1";
		};

		counter:
		{
			description = "High Out";

			id = "2.8.2";
		};
	};

	# Specify the gas meter counter to record (only specify if your
	# smart meter also records gas consumption.
	gascounter:
	{
		description = "Gas";

		id = "24.3.0";
	};
};

# Specify periodic tasks to consume; this functionality of meterd is
# normally used to update graphs of the recorded data at regular
# intervals using the other tools supplied in the meterd distribution.
#
# For more information on the tools in the distribution, please refer
# to their respective manual pages or the documentation.
tasks:
{
	# The example task below runs every 60 seconds and outputs
	# current consumption/production data in a file format that
	# is compatible with the plotting tool included in the
	# distribution and then plots the data.
	task:
	{
		# Specify the interval at which the task runs in
		# seconds
		interval = 60;

		# Specify the commands to run; you can specify 
		# multiple commands that will be run consecutively;
		# if the return value of a command is other than 0
		# execution of subsequent commands is halted.
		cmd = "meterd-output -u -d /var/lib/meterd/raw.db -p -i 3600 -o /var/tmp/current-hourly.dat";
		cmd = "meterd-plot -t \"Current consumption/production (last hour)\" -c 2 -f /var/tmp/current-hourly.dat -o /var/tmp/current-hourly.png -w 640 -h 480";
	};

	# The example task below runs every hour and outputs
	# total consumption/production data for one day for the 
	# low tariff counters in a format that is compatible with 
	# the plotting tool included in the distribution and then 
	# plots the data.
	task:
	{
		interval = 3600;

		cmd = "meterd-output -c -s "1.8.2" -s "2.8.2" -d /var/lib/meterd/consumed.db -p -i 86400 -o /var/tmp/consumed-dayly.dat";
		cmd = "meterd-plot -t \"Total consumption/production high tariff (last day)\" -c 2 -f /var/tmp/consumed-dayly.dat -o /var/tmp/consumed-daily.png -w 640 -h 480";
	};
};
